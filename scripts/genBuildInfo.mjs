import { execSync } from 'node:child_process';
import { writeFileSync, mkdirSync } from 'node:fs';
import { dirname } from 'node:path';

function safeExec(cmd) {
  try {
    return execSync(cmd, { stdio: ['ignore', 'pipe', 'ignore'] }).toString().trim();
  } catch {
    return '';
  }
}

// Prefer CI-provided envs if present (e.g., Vercel)
const envHash = process.env.VERCEL_GIT_COMMIT_SHA || process.env.GIT_COMMIT || '';
const gitHash = safeExec('git rev-parse --short HEAD');
const commitHash = (envHash || gitHash || 'unknown').slice(0, 12);

// Try to get commit date from git; fall back to now
const gitDate = safeExec('git log -1 --format=%cI');
const commitDate = gitDate || new Date().toISOString();

const outFile = new URL('../src/lib/buildInfo.ts', import.meta.url).pathname;
mkdirSync(dirname(outFile), { recursive: true });

const content = `// This file is auto-generated by scripts/genBuildInfo.mjs. Do not edit.
export const COMMIT_HASH = '${commitHash}';
export const COMMIT_DATE = '${commitDate}';
`;

writeFileSync(outFile, content, 'utf8');
console.log(`[buildInfo] Wrote ${outFile}: ${commitHash} @ ${commitDate}`);
